### 오답노트

#### 왜 틀렸나요?

문자열을 비교해야하는데, 문자 하나하나를 비교하는 if문을 적어놓고
밑에 if문의 분기가 마치 문자열을 전체 다 통과하는 filter역할을 하는 것처럼
착각하였기 때문.(되도록이면 if문의 depth를 깊게 안쓰려고 하는 주의라.. 자주 발생하는듯함.)

#### 틀린코드

```
if(target.charAt(st+pivot) != str.charAt(pivot)){
    break;
}
```

target.charAt(st+pivot) 즉, 시작점에서 pivot만큼 길이를 하나하나 비교하는 과정을
구현하기 위해서 코딩을 했습니다. 하지만, 처음에 의도한 것과 달리 한글자 한글자를
비교하는 과정에서  `aaabbcc` 에서 `ab`를 검색한다면 첫번째 비교시 a와 a를 비교하기 때문에
밑의 코드인 st +=str.length()를 그대로 실행하게 됩니다.이는 우리가 의도한 pivot만큼의 문자열을
비교하는 로직이 아닙니다. 하나하나를 비교하는 과정에서는 그 다음이 같을 수도있고,
다를 수도 있기 때문에 "문자열" 자체를 비교해야합니다.

#### 수정한 코드

```
//추가
    static boolean IsSame(int st){
        int end = st+str.length();
        String subTarget = target.substring(st,end);
        return subTarget.equals(str);
    }

//for문으로 할 시, 증감식 조작이 애매해져서, while문으로 바꿈.
while(st<target.length()){
    if(outOfRange(st)){
            break;
    }
    if(IsSame(st)){
        st+=str.length();
        cnt++;
        continue;
    }
    st++;
}
```

시작점에서 str만큼의 길이를 비교하면서 같다면, 다음 크기만큼 step을 해주고,
아니라면 step을 +1만 해주는 식으로 해주었습니다.